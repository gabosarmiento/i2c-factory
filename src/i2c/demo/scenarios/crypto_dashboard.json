[
    {
      "name": "Introduction",
      "type": "narration",
      "message": "Welcome to the I2C Factory demo! Watch as we build a complete crypto dashboard from natural language.",
      "pause": 3
    },
    {
      "name": "Initial Project Generation",
      "type": "initial_generation",
      "prompt": "Create a real-time cryptocurrency dashboard with user authentication, dark/light mode, and the ability to save favorite coins. Use React, TypeScript, and integrate with CoinGecko API.",
      "expected_files": [
        "src/App.tsx",
        "src/components/Dashboard.tsx",
        "src/components/Auth/Login.tsx",
        "src/services/coingecko.ts",
        "src/contexts/ThemeContext.tsx"
      ]
    },
    {
      "name": "Show Generated Files",
      "type": "narration",
      "message": "The system has generated a complete React application with authentication, theming, and API integration. Let's add portfolio tracking.",
      "pause": 3
    },
    {
      "name": "Add Portfolio Tracking",
      "type": "modification",
      "prompt": "Add portfolio tracking where users can input their crypto holdings and see total value",
      "expected_changes": [
        "src/components/Portfolio/PortfolioManager.tsx",
        "src/types/portfolio.ts",
        "src/services/portfolioCalculator.ts"
      ]
    },
    {
      "name": "Fix Performance Issues",
      "type": "modification",
      "prompt": "The real-time updates are causing too many API calls. Implement WebSocket updates with fallback to polling",
      "expected_changes": [
        "src/services/websocket.ts",
        "src/hooks/useRealTimeData.ts"
      ]
    },
    {
      "name": "Add Caching",
      "type": "modification",
      "prompt": "Add a caching layer to reduce API calls and improve performance",
      "expected_changes": [
        "src/services/cache.ts",
        "src/middleware/cacheMiddleware.ts"
      ]
    },
    {
      "name": "Update Dependencies",
      "type": "modification",
      "prompt": "Update all dependencies to latest versions and fix any breaking changes",
      "expected_changes": [
        "package.json",
        "src/components/Dashboard.tsx"
      ]
    },
    {
      "name": "Generate Documentation",
      "type": "modification",
      "prompt": "Generate comprehensive API documentation and user guide",
      "expected_changes": [
        "docs/API.md",
        "docs/USER_GUIDE.md",
        "README.md"
      ]
    },
    {
      "name": "Conclusion",
      "type": "narration",
      "message": "Demo complete! We've created a production-ready crypto dashboard with authentication, real-time updates, portfolio tracking, and documentation - all from natural language descriptions.",
      "pause": 5
    }
  ]