[
    {
      "name": "Intro: Smart Contract Factory",
      "type": "narration",
      "message": "Welcome to the I2C Factory demo. Today, we're building a Smart Contract Factory – an app that transforms plain-language rules into secure, deployable Ethereum smart contracts using Solidity and AI.",
      "pause": 3
    },
    {
      "name": "Initial Project Setup",
      "type": "initial_generation",
      "prompt": "Create a frontend-only app using React, TypeScript, and Vite called Smart Contract Factory. It should let users input contract rules in natural language, and generate verified Solidity code using a backend agent. Include:\n1. public/index.html with a div id='root'\n2. src/main.tsx, App.tsx, style.css\n3. Components: Home, ContractForm, ContractPreview, ThemeSwitcher\n4. Store contract drafts in localStorage\n5. Prepare a README.md with install/run steps"
    },
    {
      "name": "Add Solidity Generation Agent (AGNO)",
      "type": "modification",
      "prompt": "Add a backend agent using AGNO that:\n- Uses Groq (LLaMA3) to translate natural language to secure Solidity code\n- Validates basic contract logic (e.g., constructor, require conditions)\n- Adds comments and emits warnings if unsafe patterns exist\n- Returns a JSON object with: solidity_code, warnings[], analysis\nBackend:\n- Include a server.js with a POST /generate endpoint\nFrontend:\n- In ContractForm.tsx, send user input to backend and show preview in ContractPreview.tsx",
      "expected_changes": [
        "src/components/Contracts/ContractForm.tsx",
        "src/components/Contracts/ContractPreview.tsx",
        "backend/agent/solidity_agent.py",
        "backend/server.js",
        ".env.template"
      ]
    },
    {
      "name": "Add Real-Time Linting and Safety Score",
      "type": "modification",
      "prompt": "Enhance the ContractPreview component to display lint results and a security score (0–100). Add a service that:\n- Checks for patterns like reentrancy, unchecked sends, or missing access control\n- Highlights code blocks with warnings\n- Computes a safety score and displays it above the preview box",
      "expected_changes": [
        "src/components/Contracts/ContractPreview.tsx",
        "src/services/lintService.ts",
        "src/types/contract.ts"
      ]
    },
    {
      "name": "Add Attractive Smart UI",
      "type": "modification",
      "prompt": "Redesign the UI to reflect a modern, secure, and futuristic feel, inspired by blockchain dashboards. Apply the following:\n\n1. Use Tailwind CSS for styling and dark/light mode toggle.\n2. In `ContractForm.tsx`, use card layout with input sections clearly separated: contract name, description, and rules textarea with floating labels.\n3. In `ContractPreview.tsx`, use code syntax highlighting (e.g., PrismJS), and wrap the preview in a collapsible glassmorphic panel with a copy-to-clipboard button.\n4. In `Navbar.tsx`, include the app logo, navigation links, and a theme toggle button.\n5. Apply a global theme using `ThemeContext` with smooth transition animations between modes.\n6. Use a sleek mono font for Solidity preview, bold headings for sections, and soft shadows for component boxes.\n\nEnsure all components follow a consistent visual hierarchy and spacing.",
      "expected_changes": [
        "src/components/Contracts/ContractForm.tsx",
        "src/components/Contracts/ContractPreview.tsx",
        "src/components/Navigation/Navbar.tsx",
        "src/components/ThemeSwitcher.tsx",
        "src/contexts/ThemeContext.tsx",
        "src/style.css"
      ]
    },      
    {
      "name": "Add One-Click Run Script with Env",
      "type": "modification",
      "prompt": "Create a bash script `run.sh` that:\n- Copies ../.env into root if it exists\n- Installs frontend and backend dependencies\n- Starts both Vite and Express server in parallel\n- Adds beginner-friendly comments for clarity"
    },
    {
      "name": "Outro",
      "type": "narration",
      "message": "We've just built a Smart Contract Factory that lets anyone go from idea to Solidity code in seconds – complete with AI-based safety checks and AGNO agent integration. Welcome to the new era of secure blockchain development.",
      "pause": 5
    }
  ]
  